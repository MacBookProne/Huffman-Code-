
import java.util.HashMap;
import java.util.Map;


/**
 * @author justinodea
 */
public class Huffman {

    public String myString;
    private HashMap<Character, String> huffmanTable; 
    private Tree t;

    public Huffman() {
    }

    public Huffman(String s) {
        
        
        s = s.replace(" ", "[");
        s = s.replace("\r", "\\");
        s = s.toUpperCase(); 
        this.myString = s;
        System.out.println(s);
        
        HashMap<Character, Integer> freqTable = new HashMap<>();
        
        for (int i = 0; i < myString.length(); i++) {
            char c = myString.charAt(i);
            if (freqTable.containsKey(c))
                freqTable.replace(c, freqTable.get(c) + 1);
            else
                freqTable.put(c, 1);
        }
        
        PriorityQ q = new PriorityQ(freqTable.size());
        
        for (Map.Entry<Character, Integer> entry : freqTable.entrySet()) {
            Character c = entry.getKey();
            Integer freq = entry.getValue();
            System.out.println("char " + c + " showed up " + freq + " times.");
            Tree t = new Tree();
            t.insert((char) c, freq);
            q.insert(t);
        }
        
        while (!q.hasOneElement()) {
            Node left = q.remove().getRoot();
            Node right = q.remove().getRoot();
            Node newNode = new Node();
            newNode.leftChild = left;
            newNode.rightChild = right;
            newNode.freq = left.freq + right.freq;
            Tree t = new Tree();
            t.insert(newNode);
            q.insert(t);
        }
        
        t = q.remove();
        
        huffmanTable = t.generateHuffmanTable(); //creates a hashmap from a char to string 
        
    }
    
    public void displayTree() {
            t.displayTree();
    }
    
    public void code() {
        StringBuilder sb = new StringBuilder();
        
        for (int i = 0; i < myString.length(); i++) {
            char c = myString.charAt(i);
            sb.append(huffmanTable.get(c));
        }
        
        System.out.println(sb.toString());
    }
    
    public void decode() {
        System.out.println(myString); 
    }
}
